services:
  web:
    image: nginx:alpine
    container_name: webapp-web
    ports:
      - "${WEB_PORT:-80}:80"
    volumes:
      - ./web:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - frontend
      - backend

  app:
    image: node:18-alpine
    container_name: webapp-app
    working_dir: /app
    volumes:
      - ./app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://cache:6379
    command: ["npm", "start"]
    depends_on:
      - db
      - cache
    networks:
      - backend

  db:
    image: postgres:15-alpine
    container_name: webapp-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-webapp}
      - POSTGRES_USER=${POSTGRES_USER:-webapp_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - backend

  cache:
    image: redis:7-alpine
    container_name: webapp-cache
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge